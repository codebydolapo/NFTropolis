/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  Marketplace,
  MarketplaceInterface,
} from "../../contracts/Marketplace";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract Minter",
        name: "_minterAddress",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "Pay",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "Rent",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "buyNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "collectedListingFees",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "delist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "getTokenURL",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "idToMarketItem",
    outputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "seller",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "sold",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "listNFT",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "listingFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_tokenURI",
        type: "string",
      },
    ],
    name: "mintNFT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "mintRecords",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minter",
    outputs: [
      {
        internalType: "contract Minter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_to",
        type: "address",
      },
    ],
    name: "pay",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalEarnings",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052662386f26fc100006007553480156200001c57600080fd5b5060405162001e8138038062001e8183398181016040528101906200004291906200019f565b600160008190555081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006008819055505050620001e6565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200010e82620000e1565b9050919050565b6000620001228262000101565b9050919050565b620001348162000115565b81146200014057600080fd5b50565b600081519050620001548162000129565b92915050565b60006200016782620000e1565b9050919050565b62000179816200015a565b81146200018557600080fd5b50565b60008151905062000199816200016e565b92915050565b60008060408385031215620001b957620001b8620000dc565b5b6000620001c98582860162000143565b9250506020620001dc8582860162000188565b9150509250929050565b611c8b80620001f66000396000f3fe6080604052600436106100e85760003560e01c806394383f141161008a578063c4e41b2211610059578063c4e41b22146102dc578063e61a70c014610307578063f8b2cb4f14610347578063fb37e88314610384576100e8565b806394383f141461022f578063964bc33f1461024b57806397562de414610274578063aa5f9685146102b1576100e8565b80635d742fd3116100c65780635d742fd3146101735780636a1b7ecc1461019c5780638665e2ad146101c75780638da5cb5b14610204576100e8565b806307546172146100ed5780630c11dedd146101185780632df3eba414610148575b600080fd5b3480156100f957600080fd5b506101026103c1565b60405161010f91906110ec565b60405180910390f35b610132600480360381019061012d9190611159565b6103e7565b60405161013f91906111a1565b60405180910390f35b34801561015457600080fd5b5061015d6105e4565b60405161016a91906111d5565b60405180910390f35b34801561017f57600080fd5b5061019a6004803603810190610195919061125a565b6105ea565b005b3480156101a857600080fd5b506101b1610790565b6040516101be91906111d5565b60405180910390f35b3480156101d357600080fd5b506101ee60048036038101906101e991906112ad565b610796565b6040516101fb919061136a565b60405180910390f35b34801561021057600080fd5b50610219610840565b604051610226919061139b565b60405180910390f35b610249600480360381019061024491906113b6565b610866565b005b34801561025757600080fd5b50610272600480360381019061026d91906112ad565b610b86565b005b34801561028057600080fd5b5061029b600480360381019061029691906113f6565b610d8a565b6040516102a891906111d5565b60405180910390f35b3480156102bd57600080fd5b506102c6610da2565b6040516102d391906111d5565b60405180910390f35b3480156102e857600080fd5b506102f1610da8565b6040516102fe91906111d5565b60405180910390f35b34801561031357600080fd5b5061032e600480360381019061032991906112ad565b610e40565b60405161033e9493929190611423565b60405180910390f35b34801561035357600080fd5b5061036e600480360381019061036991906113f6565b610e9d565b60405161037b91906111d5565b60405180910390f35b34801561039057600080fd5b506103ab60048036038101906103a6919061159d565b610f42565b6040516103b891906111d5565b60405180910390f35b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080341161042b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042290611632565b60405180910390fd5b6000349050670de0b6b3a76400008161044491906116b0565b905080600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550806005600082825461049c91906116e1565b925050819055508273ffffffffffffffffffffffffffffffffffffffff16600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610533576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052a90611761565b60405180910390fd5b60008373ffffffffffffffffffffffffffffffffffffffff1634604051610559906117b2565b60006040518083038185875af1925050503d8060008114610596576040519150601f19603f3d011682016040523d82523d6000602084013e61059b565b606091505b505090507f288d9a5737d39d766acb848da277a970d9ee31f9115e17490b9393e282fa7b4d8433346040516105d2939291906117f7565b60405180910390a18092505050919050565b60055481565b6105f2610ff0565b80600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205403610673576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066a9061187a565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b99ab7ed8484846040518463ffffffff1660e01b81526004016106d29392919061189a565b600060405180830381600087803b1580156106ec57600080fd5b505af1158015610700573d6000803e3d6000fd5b5050505080600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f65a2f63023c2ec581cae2c1b80c9859bae15340d7759eaeddb539a730ac3d7bf83838360405161077b9392919061189a565b60405180910390a161078b61103f565b505050565b60075481565b6060600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663154e839e836040518263ffffffff1660e01b81526004016107f391906111d5565b600060405180830381865afa158015610810573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906108399190611941565b9050919050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61086e610ff0565b600082116108b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a8906119fc565b60405180910390fd5b6007543410156108f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ed90611a68565b60405180910390fd5b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639870dce0836040518263ffffffff1660e01b815260040161095391906111d5565b602060405180830381865afa158015610970573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109949190611a9d565b90503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610a04576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109fb90611b3c565b60405180910390fd5b610a0e6001611049565b6000610a1a600161105f565b905060405180608001604052808481526020013373ffffffffffffffffffffffffffffffffffffffff16815260200185815260200160001515815250600360008381526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015560608201518160030160006101000a81548160ff021916908315150217905550905050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b8152600401610b469392919061189a565b600060405180830381600087803b158015610b6057600080fd5b505af1158015610b74573d6000803e3d6000fd5b505050505050610b8261103f565b5050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639870dce0836040518263ffffffff1660e01b8152600401610be391906111d5565b602060405180830381865afa158015610c00573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c249190611a9d565b90503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610c94576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c8b90611b3c565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3033856040518463ffffffff1660e01b8152600401610cf39392919061189a565b600060405180830381600087803b158015610d0d57600080fd5b505af1158015610d21573d6000803e3d6000fd5b50505050600360008381526020019081526020016000206000808201600090556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560028201600090556003820160006101000a81549060ff021916905550505050565b60046020528060005260406000206000915090505481565b60085481565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e17573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e3b9190611b71565b905090565b60036020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030160009054906101000a900460ff16905084565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f8b2cb4f836040518263ffffffff1660e01b8152600401610efa9190611b9e565b602060405180830381865afa158015610f17573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f3b9190611b71565b9050919050565b600080600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631c351a9d84336040518363ffffffff1660e01b8152600401610fa2929190611bb9565b6020604051808303816000875af1158015610fc1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fe59190611b71565b905080915050919050565b600260005403611035576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161102c90611c35565b60405180910390fd5b6002600081905550565b6001600081905550565b6001816000016000828254019250508190555050565b600081600001549050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006110b26110ad6110a88461106d565b61108d565b61106d565b9050919050565b60006110c482611097565b9050919050565b60006110d6826110b9565b9050919050565b6110e6816110cb565b82525050565b600060208201905061110160008301846110dd565b92915050565b6000604051905090565b600080fd5b600080fd5b60006111268261106d565b9050919050565b6111368161111b565b811461114157600080fd5b50565b6000813590506111538161112d565b92915050565b60006020828403121561116f5761116e611111565b5b600061117d84828501611144565b91505092915050565b60008115159050919050565b61119b81611186565b82525050565b60006020820190506111b66000830184611192565b92915050565b6000819050919050565b6111cf816111bc565b82525050565b60006020820190506111ea60008301846111c6565b92915050565b60006111fb8261106d565b9050919050565b61120b816111f0565b811461121657600080fd5b50565b60008135905061122881611202565b92915050565b611237816111bc565b811461124257600080fd5b50565b6000813590506112548161122e565b92915050565b60008060006060848603121561127357611272611111565b5b600061128186828701611219565b935050602061129286828701611219565b92505060406112a386828701611245565b9150509250925092565b6000602082840312156112c3576112c2611111565b5b60006112d184828501611245565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156113145780820151818401526020810190506112f9565b60008484015250505050565b6000601f19601f8301169050919050565b600061133c826112da565b61134681856112e5565b93506113568185602086016112f6565b61135f81611320565b840191505092915050565b600060208201905081810360008301526113848184611331565b905092915050565b6113958161111b565b82525050565b60006020820190506113b0600083018461138c565b92915050565b600080604083850312156113cd576113cc611111565b5b60006113db85828601611245565b92505060206113ec85828601611245565b9150509250929050565b60006020828403121561140c5761140b611111565b5b600061141a84828501611219565b91505092915050565b600060808201905061143860008301876111c6565b611445602083018661138c565b61145260408301856111c6565b61145f6060830184611192565b95945050505050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6114aa82611320565b810181811067ffffffffffffffff821117156114c9576114c8611472565b5b80604052505050565b60006114dc611107565b90506114e882826114a1565b919050565b600067ffffffffffffffff82111561150857611507611472565b5b61151182611320565b9050602081019050919050565b82818337600083830152505050565b600061154061153b846114ed565b6114d2565b90508281526020810184848401111561155c5761155b61146d565b5b61156784828561151e565b509392505050565b600082601f83011261158457611583611468565b5b813561159484826020860161152d565b91505092915050565b6000602082840312156115b3576115b2611111565b5b600082013567ffffffffffffffff8111156115d1576115d0611116565b5b6115dd8482850161156f565b91505092915050565b7f506c656173652073656e6420612076616c696420616d6f756e74000000000000600082015250565b600061161c601a836112e5565b9150611627826115e6565b602082019050919050565b6000602082019050818103600083015261164b8161160f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006116bb826111bc565b91506116c6836111bc565b9250826116d6576116d5611652565b5b828204905092915050565b60006116ec826111bc565b91506116f7836111bc565b925082820190508082111561170f5761170e611681565b5b92915050565b7f556e617574686f72697a65640000000000000000000000000000000000000000600082015250565b600061174b600c836112e5565b915061175682611715565b602082019050919050565b6000602082019050818103600083015261177a8161173e565b9050919050565b600081905092915050565b50565b600061179c600083611781565b91506117a78261178c565b600082019050919050565b60006117bd8261178f565b9150819050919050565b60006117d2826110b9565b9050919050565b6117e2816117c7565b82525050565b6117f1816111f0565b82525050565b600060608201905061180c60008301866117d9565b61181960208301856117e8565b61182660408301846111c6565b949350505050565b7f416c726561647920626f756768742074686973204e4654000000000000000000600082015250565b60006118646017836112e5565b915061186f8261182e565b602082019050919050565b6000602082019050818103600083015261189381611857565b9050919050565b60006060820190506118af60008301866117e8565b6118bc60208301856117e8565b6118c960408301846111c6565b949350505050565b60006118e46118df846114ed565b6114d2565b905082815260208101848484011115611900576118ff61146d565b5b61190b8482856112f6565b509392505050565b600082601f83011261192857611927611468565b5b81516119388482602086016118d1565b91505092915050565b60006020828403121561195757611956611111565b5b600082015167ffffffffffffffff81111561197557611974611116565b5b61198184828501611913565b91505092915050565b7f50726963652073686f756c642062652067726561746572207468616e207a657260008201527f6f00000000000000000000000000000000000000000000000000000000000000602082015250565b60006119e66021836112e5565b91506119f18261198a565b604082019050919050565b60006020820190508181036000830152611a15816119d9565b9050919050565b7f496e73756666696369656e74206c697374696e67206665650000000000000000600082015250565b6000611a526018836112e5565b9150611a5d82611a1c565b602082019050919050565b60006020820190508181036000830152611a8181611a45565b9050919050565b600081519050611a9781611202565b92915050565b600060208284031215611ab357611ab2611111565b5b6000611ac184828501611a88565b91505092915050565b7f53656e646572206973206e6f7420746865206f776e6572206f6620746865207460008201527f6f6b656e00000000000000000000000000000000000000000000000000000000602082015250565b6000611b266024836112e5565b9150611b3182611aca565b604082019050919050565b60006020820190508181036000830152611b5581611b19565b9050919050565b600081519050611b6b8161122e565b92915050565b600060208284031215611b8757611b86611111565b5b6000611b9584828501611b5c565b91505092915050565b6000602082019050611bb360008301846117e8565b92915050565b60006040820190508181036000830152611bd38185611331565b9050611be260208301846117e8565b9392505050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000611c1f601f836112e5565b9150611c2a82611be9565b602082019050919050565b60006020820190508181036000830152611c4e81611c12565b905091905056fea26469706673582212203a4399c3391150e1b2629c5c853190b80fb2b7d434c7384ad42e0c94c35ccca564736f6c63430008110033";

type MarketplaceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MarketplaceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Marketplace__factory extends ContractFactory {
  constructor(...args: MarketplaceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _minterAddress: PromiseOrValue<string>,
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Marketplace> {
    return super.deploy(
      _minterAddress,
      _owner,
      overrides || {}
    ) as Promise<Marketplace>;
  }
  override getDeployTransaction(
    _minterAddress: PromiseOrValue<string>,
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_minterAddress, _owner, overrides || {});
  }
  override attach(address: string): Marketplace {
    return super.attach(address) as Marketplace;
  }
  override connect(signer: Signer): Marketplace__factory {
    return super.connect(signer) as Marketplace__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MarketplaceInterface {
    return new utils.Interface(_abi) as MarketplaceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Marketplace {
    return new Contract(address, _abi, signerOrProvider) as Marketplace;
  }
}
